{"version":3,"names":["_t","isAssignmentPattern","isIdentifier","jsesc","Identifier","node","_node$loc","sourceIdentifierName","loc","identifierName","name","word","ArgumentPlaceholder","token","RestElement","print","argument","SpreadElement","ObjectExpression","props","properties","length","space","printList","indent","statement","sourceWithOffset","ObjectPattern","ObjectMethod","printJoin","decorators","_methodHead","body","ObjectProperty","computed","key","value","left","shorthand","ArrayExpression","elems","elements","len","i","elem","ArrayPattern","RecordExpression","startToken","endToken","format","recordAndTupleSyntaxType","Error","JSON","stringify","TupleExpression","RegExpLiteral","pattern","flags","BooleanLiteral","NullLiteral","NumericLiteral","raw","getPossibleRaw","opts","jsescOption","numbers","number","minified","StringLiteral","undefined","val","BigIntLiteral","DecimalLiteral","validTopicTokenSet","Set","TopicReference","topicToken","has","givenTopicTokenJSON","validTopics","Array","from","v","join","PipelineTopicExpression","expression","PipelineBareFunction","callee","PipelinePrimaryTopicReference"],"sources":["../../src/generators/types.ts"],"sourcesContent":["import type Printer from \"../printer\";\nimport { isAssignmentPattern, isIdentifier } from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport jsesc from \"jsesc\";\n\nexport function Identifier(this: Printer, node: t.Identifier) {\n  this.sourceIdentifierName(\n    // @ts-expect-error Undocumented property identifierName\n    node.loc?.identifierName || node.name,\n  );\n  this.word(node.name);\n}\n\nexport function ArgumentPlaceholder(this: Printer) {\n  this.token(\"?\");\n}\n\nexport function RestElement(this: Printer, node: t.RestElement) {\n  this.token(\"...\");\n  this.print(node.argument, node);\n}\n\nexport { RestElement as SpreadElement };\n\nexport function ObjectExpression(this: Printer, node: t.ObjectExpression) {\n  const props = node.properties;\n\n  this.token(\"{\");\n\n  if (props.length) {\n    this.space();\n    this.printList(props, node, { indent: true, statement: true });\n    this.space();\n  }\n\n  this.sourceWithOffset(\"end\", node.loc, 0, -1);\n\n  this.token(\"}\");\n}\n\nexport { ObjectExpression as ObjectPattern };\n\nexport function ObjectMethod(this: Printer, node: t.ObjectMethod) {\n  this.printJoin(node.decorators, node);\n  this._methodHead(node);\n  this.space();\n  this.print(node.body, node);\n}\n\nexport function ObjectProperty(this: Printer, node: t.ObjectProperty) {\n  this.printJoin(node.decorators, node);\n\n  if (node.computed) {\n    this.token(\"[\");\n    this.print(node.key, node);\n    this.token(\"]\");\n  } else {\n    // print `({ foo: foo = 5 } = {})` as `({ foo = 5 } = {});`\n    if (\n      isAssignmentPattern(node.value) &&\n      isIdentifier(node.key) &&\n      // @ts-expect-error todo(flow->ts) `.name` does not exist on some types in union\n      node.key.name === node.value.left.name\n    ) {\n      this.print(node.value, node);\n      return;\n    }\n\n    this.print(node.key, node);\n\n    // shorthand!\n    if (\n      node.shorthand &&\n      isIdentifier(node.key) &&\n      isIdentifier(node.value) &&\n      node.key.name === node.value.name\n    ) {\n      return;\n    }\n  }\n\n  this.token(\":\");\n  this.space();\n  this.print(node.value, node);\n}\n\nexport function ArrayExpression(this: Printer, node: t.ArrayExpression) {\n  const elems = node.elements;\n  const len = elems.length;\n\n  this.token(\"[\");\n\n  for (let i = 0; i < elems.length; i++) {\n    const elem = elems[i];\n    if (elem) {\n      if (i > 0) this.space();\n      this.print(elem, node);\n      if (i < len - 1) this.token(\",\");\n    } else {\n      // If the array expression ends with a hole, that hole\n      // will be ignored by the interpreter, but if it ends with\n      // two (or more) holes, we need to write out two (or more)\n      // commas so that the resulting code is interpreted with\n      // both (all) of the holes.\n      this.token(\",\");\n    }\n  }\n\n  this.token(\"]\");\n}\n\nexport { ArrayExpression as ArrayPattern };\n\nexport function RecordExpression(this: Printer, node: t.RecordExpression) {\n  const props = node.properties;\n\n  let startToken;\n  let endToken;\n  if (this.format.recordAndTupleSyntaxType === \"bar\") {\n    startToken = \"{|\";\n    endToken = \"|}\";\n  } else if (\n    this.format.recordAndTupleSyntaxType !== \"hash\" &&\n    this.format.recordAndTupleSyntaxType != null\n  ) {\n    throw new Error(\n      `The \"recordAndTupleSyntaxType\" generator option must be \"bar\" or \"hash\" (${JSON.stringify(\n        this.format.recordAndTupleSyntaxType,\n      )} received).`,\n    );\n  } else {\n    startToken = \"#{\";\n    endToken = \"}\";\n  }\n\n  this.token(startToken);\n\n  if (props.length) {\n    this.space();\n    this.printList(props, node, { indent: true, statement: true });\n    this.space();\n  }\n  this.token(endToken);\n}\n\nexport function TupleExpression(this: Printer, node: t.TupleExpression) {\n  const elems = node.elements;\n  const len = elems.length;\n\n  let startToken;\n  let endToken;\n  if (this.format.recordAndTupleSyntaxType === \"bar\") {\n    startToken = \"[|\";\n    endToken = \"|]\";\n  } else if (this.format.recordAndTupleSyntaxType === \"hash\") {\n    startToken = \"#[\";\n    endToken = \"]\";\n  } else {\n    throw new Error(\n      `${this.format.recordAndTupleSyntaxType} is not a valid recordAndTuple syntax type`,\n    );\n  }\n\n  this.token(startToken);\n\n  for (let i = 0; i < elems.length; i++) {\n    const elem = elems[i];\n    if (elem) {\n      if (i > 0) this.space();\n      this.print(elem, node);\n      if (i < len - 1) this.token(\",\");\n    }\n  }\n\n  this.token(endToken);\n}\n\nexport function RegExpLiteral(this: Printer, node: t.RegExpLiteral) {\n  this.word(`/${node.pattern}/${node.flags}`);\n}\n\nexport function BooleanLiteral(this: Printer, node: t.BooleanLiteral) {\n  this.word(node.value ? \"true\" : \"false\");\n}\n\nexport function NullLiteral(this: Printer) {\n  this.word(\"null\");\n}\n\nexport function NumericLiteral(this: Printer, node: t.NumericLiteral) {\n  const raw = this.getPossibleRaw(node);\n  const opts = this.format.jsescOption;\n  const value = node.value + \"\";\n  if (opts.numbers) {\n    this.number(jsesc(node.value, opts));\n  } else if (raw == null) {\n    this.number(value); // normalize\n  } else if (this.format.minified) {\n    this.number(raw.length < value.length ? raw : value);\n  } else {\n    this.number(raw);\n  }\n}\n\nexport function StringLiteral(this: Printer, node: t.StringLiteral) {\n  const raw = this.getPossibleRaw(node);\n  if (!this.format.minified && raw !== undefined) {\n    this.token(raw);\n    return;\n  }\n\n  const val = jsesc(node.value, this.format.jsescOption);\n\n  this.token(val);\n}\n\nexport function BigIntLiteral(this: Printer, node: t.BigIntLiteral) {\n  const raw = this.getPossibleRaw(node);\n  if (!this.format.minified && raw !== undefined) {\n    this.word(raw);\n    return;\n  }\n  this.word(node.value + \"n\");\n}\n\nexport function DecimalLiteral(this: Printer, node: t.DecimalLiteral) {\n  const raw = this.getPossibleRaw(node);\n  if (!this.format.minified && raw !== undefined) {\n    this.word(raw);\n    return;\n  }\n  this.word(node.value + \"m\");\n}\n\n// Hack pipe operator\nconst validTopicTokenSet = new Set([\"^^\", \"@@\", \"^\", \"%\", \"#\"]);\nexport function TopicReference(this: Printer) {\n  const { topicToken } = this.format;\n\n  if (validTopicTokenSet.has(topicToken)) {\n    this.token(topicToken);\n  } else {\n    const givenTopicTokenJSON = JSON.stringify(topicToken);\n    const validTopics = Array.from(validTopicTokenSet, v => JSON.stringify(v));\n    throw new Error(\n      `The \"topicToken\" generator option must be one of ` +\n        `${validTopics.join(\", \")} (${givenTopicTokenJSON} received instead).`,\n    );\n  }\n}\n\n// Smart-mix pipe operator\nexport function PipelineTopicExpression(\n  this: Printer,\n  node: t.PipelineTopicExpression,\n) {\n  this.print(node.expression, node);\n}\n\nexport function PipelineBareFunction(\n  this: Printer,\n  node: t.PipelineBareFunction,\n) {\n  this.print(node.callee, node);\n}\n\nexport function PipelinePrimaryTopicReference(this: Printer) {\n  this.token(\"#\");\n}\n"],"mappings":"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"}