{"version":3,"names":["isValidIdentifier","isIdentifierChar","toIdentifier","input","name","c","codePointAt","replace","match","toUpperCase"],"sources":["../../src/converters/toIdentifier.ts"],"sourcesContent":["import isValidIdentifier from \"../validators/isValidIdentifier\";\nimport { isIdentifierChar } from \"@babel/helper-validator-identifier\";\n\nexport default function toIdentifier(input: string): string {\n  input = input + \"\";\n\n  // replace all non-valid identifiers with dashes\n  let name = \"\";\n  for (const c of input) {\n    name += isIdentifierChar(c.codePointAt(0)) ? c : \"-\";\n  }\n\n  // remove all dashes and numbers from start of name\n  name = name.replace(/^[-0-9]+/, \"\");\n\n  // camel case\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (!isValidIdentifier(name)) {\n    name = `_${name}`;\n  }\n\n  return name || \"_\";\n}\n"],"mappings":"AAAA,OAAOA,iBAAiB,MAAM,oCAAiC;AAC/D,SAASC,gBAAgB,QAAQ,oCAAoC;AAErE,eAAe,SAASC,YAAYA,CAACC,KAAa,EAAU;EAC1DA,KAAK,GAAGA,KAAK,GAAG,EAAE;EAGlB,IAAIC,IAAI,GAAG,EAAE;EACb,KAAK,MAAMC,CAAC,IAAIF,KAAK,EAAE;IACrBC,IAAI,IAAIH,gBAAgB,CAACI,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,GAAG,GAAG;EACtD;EAGAD,IAAI,GAAGA,IAAI,CAACG,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;EAGnCH,IAAI,GAAGA,IAAI,CAACG,OAAO,CAAC,aAAa,EAAE,UAAUC,KAAK,EAAEH,CAAC,EAAE;IACrD,OAAOA,CAAC,GAAGA,CAAC,CAACI,WAAW,EAAE,GAAG,EAAE;EACjC,CAAC,CAAC;EAEF,IAAI,CAACT,iBAAiB,CAACI,IAAI,CAAC,EAAE;IAC5BA,IAAI,GAAI,IAAGA,IAAK,EAAC;EACnB;EAEA,OAAOA,IAAI,IAAI,GAAG;AACpB"}