{"version":3,"names":["isIdentifier","stringLiteral","toComputedKey","node","key","property","computed","name"],"sources":["../../src/converters/toComputedKey.ts"],"sourcesContent":["import { isIdentifier } from \"../validators/generated\";\nimport { stringLiteral } from \"../builders/generated\";\nimport type * as t from \"..\";\n\nexport default function toComputedKey(\n  node:\n    | t.ObjectMember\n    | t.ObjectProperty\n    | t.ClassMethod\n    | t.ClassProperty\n    | t.ClassAccessorProperty\n    | t.MemberExpression\n    | t.OptionalMemberExpression,\n  // @ts-expect-error todo(flow->ts): maybe check the type of node before accessing .key and .property\n  key: t.Expression | t.PrivateName = node.key || node.property,\n) {\n  if (!node.computed && isIdentifier(key)) key = stringLiteral(key.name);\n\n  return key;\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,kCAAyB;AACtD,SAASC,aAAa,QAAQ,gCAAuB;AAGrD,eAAe,SAASC,aAAaA,CACnCC,IAO8B,EAE9BC,GAAiC,GAAGD,IAAI,CAACC,GAAG,IAAID,IAAI,CAACE,QAAQ,EAC7D;EACA,IAAI,CAACF,IAAI,CAACG,QAAQ,IAAIN,YAAY,CAACI,GAAG,CAAC,EAAEA,GAAG,GAAGH,aAAa,CAACG,GAAG,CAACG,IAAI,CAAC;EAEtE,OAAOH,GAAG;AACZ"}