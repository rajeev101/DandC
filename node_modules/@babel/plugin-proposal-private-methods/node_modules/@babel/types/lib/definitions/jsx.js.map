{"version":3,"names":["defineAliasedType","assertNodeType","assertValueType","chain","assertEach","defineType","visitor","aliases","fields","name","validate","value","optional","builder","Object","assign","openingElement","closingElement","children","selfClosing","expression","object","property","namespace","default","attributes","typeParameters","argument","openingFragment","closingFragment"],"sources":["../../src/definitions/jsx.ts"],"sourcesContent":["import {\n  defineAliasedType,\n  assertNodeType,\n  assertValueType,\n  chain,\n  assertEach,\n} from \"./utils\";\n\nconst defineType = defineAliasedType(\"JSX\");\n\ndefineType(\"JSXAttribute\", {\n  visitor: [\"name\", \"value\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: assertNodeType(\"JSXIdentifier\", \"JSXNamespacedName\"),\n    },\n    value: {\n      optional: true,\n      validate: assertNodeType(\n        \"JSXElement\",\n        \"JSXFragment\",\n        \"StringLiteral\",\n        \"JSXExpressionContainer\",\n      ),\n    },\n  },\n});\n\ndefineType(\"JSXClosingElement\", {\n  visitor: [\"name\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: assertNodeType(\n        \"JSXIdentifier\",\n        \"JSXMemberExpression\",\n        \"JSXNamespacedName\",\n      ),\n    },\n  },\n});\n\ndefineType(\"JSXElement\", {\n  builder: process.env.BABEL_8_BREAKING\n    ? [\"openingElement\", \"closingElement\", \"children\"]\n    : [\"openingElement\", \"closingElement\", \"children\", \"selfClosing\"],\n  visitor: [\"openingElement\", \"children\", \"closingElement\"],\n  aliases: [\"Immutable\", \"Expression\"],\n  fields: {\n    openingElement: {\n      validate: assertNodeType(\"JSXOpeningElement\"),\n    },\n    closingElement: {\n      optional: true,\n      validate: assertNodeType(\"JSXClosingElement\"),\n    },\n    children: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"JSXText\",\n            \"JSXExpressionContainer\",\n            \"JSXSpreadChild\",\n            \"JSXElement\",\n            \"JSXFragment\",\n          ),\n        ),\n      ),\n    },\n    ...(process.env.BABEL_8_BREAKING\n      ? {}\n      : {\n          selfClosing: {\n            validate: assertValueType(\"boolean\"),\n            optional: true,\n          },\n        }),\n  },\n});\n\ndefineType(\"JSXEmptyExpression\", {});\n\ndefineType(\"JSXExpressionContainer\", {\n  visitor: [\"expression\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\", \"JSXEmptyExpression\"),\n    },\n  },\n});\n\ndefineType(\"JSXSpreadChild\", {\n  visitor: [\"expression\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"JSXIdentifier\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"JSXMemberExpression\", {\n  visitor: [\"object\", \"property\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"JSXMemberExpression\", \"JSXIdentifier\"),\n    },\n    property: {\n      validate: assertNodeType(\"JSXIdentifier\"),\n    },\n  },\n});\n\ndefineType(\"JSXNamespacedName\", {\n  visitor: [\"namespace\", \"name\"],\n  fields: {\n    namespace: {\n      validate: assertNodeType(\"JSXIdentifier\"),\n    },\n    name: {\n      validate: assertNodeType(\"JSXIdentifier\"),\n    },\n  },\n});\n\ndefineType(\"JSXOpeningElement\", {\n  builder: [\"name\", \"attributes\", \"selfClosing\"],\n  visitor: [\"name\", \"attributes\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: assertNodeType(\n        \"JSXIdentifier\",\n        \"JSXMemberExpression\",\n        \"JSXNamespacedName\",\n      ),\n    },\n    selfClosing: {\n      default: false,\n    },\n    attributes: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"JSXAttribute\", \"JSXSpreadAttribute\")),\n      ),\n    },\n    typeParameters: {\n      validate: assertNodeType(\n        \"TypeParameterInstantiation\",\n        \"TSTypeParameterInstantiation\",\n      ),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"JSXSpreadAttribute\", {\n  visitor: [\"argument\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"JSXText\", {\n  aliases: [\"Immutable\"],\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"JSXFragment\", {\n  builder: [\"openingFragment\", \"closingFragment\", \"children\"],\n  visitor: [\"openingFragment\", \"children\", \"closingFragment\"],\n  aliases: [\"Immutable\", \"Expression\"],\n  fields: {\n    openingFragment: {\n      validate: assertNodeType(\"JSXOpeningFragment\"),\n    },\n    closingFragment: {\n      validate: assertNodeType(\"JSXClosingFragment\"),\n    },\n    children: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"JSXText\",\n            \"JSXExpressionContainer\",\n            \"JSXSpreadChild\",\n            \"JSXElement\",\n            \"JSXFragment\",\n          ),\n        ),\n      ),\n    },\n  },\n});\n\ndefineType(\"JSXOpeningFragment\", {\n  aliases: [\"Immutable\"],\n});\n\ndefineType(\"JSXClosingFragment\", {\n  aliases: [\"Immutable\"],\n});\n"],"mappings":"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"}