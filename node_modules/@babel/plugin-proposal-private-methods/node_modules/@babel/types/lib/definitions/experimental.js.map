{"version":3,"names":["defineType","assertEach","assertNodeType","assertValueType","chain","visitor","aliases","fields","process","env","BABEL_TYPES_8_BREAKING","object","validate","Object","assign","oneOfNodeTypes","callee","key","value","expression","builder","body","async","default","exported","properties","elements"],"sources":["../../src/definitions/experimental.ts"],"sourcesContent":["import defineType, {\n  assertEach,\n  assertNodeType,\n  assertValueType,\n  chain,\n} from \"./utils\";\n\ndefineType(\"ArgumentPlaceholder\", {});\n\ndefineType(\"BindExpression\", {\n  visitor: [\"object\", \"callee\"],\n  aliases: [\"Expression\"],\n  fields: !process.env.BABEL_TYPES_8_BREAKING\n    ? {\n        object: {\n          validate: Object.assign(() => {}, {\n            oneOfNodeTypes: [\"Expression\"],\n          }),\n        },\n        callee: {\n          validate: Object.assign(() => {}, {\n            oneOfNodeTypes: [\"Expression\"],\n          }),\n        },\n      }\n    : {\n        object: {\n          validate: assertNodeType(\"Expression\"),\n        },\n        callee: {\n          validate: assertNodeType(\"Expression\"),\n        },\n      },\n});\n\ndefineType(\"ImportAttribute\", {\n  visitor: [\"key\", \"value\"],\n  fields: {\n    key: {\n      validate: assertNodeType(\"Identifier\", \"StringLiteral\"),\n    },\n    value: {\n      validate: assertNodeType(\"StringLiteral\"),\n    },\n  },\n});\n\ndefineType(\"Decorator\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"DoExpression\", {\n  visitor: [\"body\"],\n  builder: [\"body\", \"async\"],\n  aliases: [\"Expression\"],\n  fields: {\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n    async: {\n      validate: assertValueType(\"boolean\"),\n      default: false,\n    },\n  },\n});\n\ndefineType(\"ExportDefaultSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"RecordExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"ObjectProperty\", \"SpreadElement\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"TupleExpression\", {\n  fields: {\n    elements: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"Expression\", \"SpreadElement\")),\n      ),\n      default: [],\n    },\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"DecimalLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\n// https://github.com/tc39/proposal-js-module-blocks\ndefineType(\"ModuleExpression\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: assertNodeType(\"Program\"),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\n// https://github.com/tc39/proposal-pipeline-operator\n// https://github.com/js-choi/proposal-hack-pipes\ndefineType(\"TopicReference\", {\n  aliases: [\"Expression\"],\n});\n\n// https://github.com/tc39/proposal-pipeline-operator\n// https://github.com/js-choi/proposal-smart-pipes\ndefineType(\"PipelineTopicExpression\", {\n  builder: [\"expression\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"PipelineBareFunction\", {\n  builder: [\"callee\"],\n  visitor: [\"callee\"],\n  fields: {\n    callee: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"PipelinePrimaryTopicReference\", {\n  aliases: [\"Expression\"],\n});\n"],"mappings":"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"}