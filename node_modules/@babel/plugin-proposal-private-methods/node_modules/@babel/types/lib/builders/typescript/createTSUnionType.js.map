{"version":3,"names":["tsUnionType","removeTypeDuplicates","isTSTypeAnnotation","createTSUnionType","typeAnnotations","types","map","type","typeAnnotation","flattened","length"],"sources":["../../../src/builders/typescript/createTSUnionType.ts"],"sourcesContent":["import { tsUnionType } from \"../generated\";\nimport removeTypeDuplicates from \"../../modifications/typescript/removeTypeDuplicates\";\nimport { isTSTypeAnnotation } from \"../../validators/generated/index\";\nimport type * as t from \"../..\";\n\n/**\n * Takes an array of `types` and flattens them, removing duplicates and\n * returns a `UnionTypeAnnotation` node containing them.\n */\nexport default function createTSUnionType(\n  typeAnnotations: Array<t.TSTypeAnnotation | t.TSType>,\n): t.TSType {\n  const types = typeAnnotations.map(type => {\n    return isTSTypeAnnotation(type) ? type.typeAnnotation : type;\n  });\n  const flattened = removeTypeDuplicates(types);\n\n  if (flattened.length === 1) {\n    return flattened[0];\n  } else {\n    return tsUnionType(flattened);\n  }\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,uBAAc;AAC1C,OAAOC,oBAAoB,MAAM,wDAAqD;AACtF,SAASC,kBAAkB,QAAQ,qCAAkC;AAOrE,eAAe,SAASC,iBAAiBA,CACvCC,eAAqD,EAC3C;EACV,MAAMC,KAAK,GAAGD,eAAe,CAACE,GAAG,CAACC,IAAI,IAAI;IACxC,OAAOL,kBAAkB,CAACK,IAAI,CAAC,GAAGA,IAAI,CAACC,cAAc,GAAGD,IAAI;EAC9D,CAAC,CAAC;EACF,MAAME,SAAS,GAAGR,oBAAoB,CAACI,KAAK,CAAC;EAE7C,IAAII,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;IAC1B,OAAOD,SAAS,CAAC,CAAC,CAAC;EACrB,CAAC,MAAM;IACL,OAAOT,WAAW,CAACS,SAAS,CAAC;EAC/B;AACF"}