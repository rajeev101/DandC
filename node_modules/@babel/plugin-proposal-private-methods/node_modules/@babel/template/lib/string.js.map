{"version":3,"names":["normalizeReplacements","parseAndBuildMetadata","populatePlaceholders","stringTemplate","formatter","code","opts","metadata","arg","replacements","unwrap"],"sources":["../src/string.ts"],"sourcesContent":["import type { Formatter } from \"./formatters\";\nimport type { TemplateOpts } from \"./options\";\nimport type { Metadata } from \"./parse\";\nimport { normalizeReplacements } from \"./options\";\nimport parseAndBuildMetadata from \"./parse\";\nimport populatePlaceholders from \"./populate\";\n\nexport default function stringTemplate<T>(\n  formatter: Formatter<T>,\n  code: string,\n  opts: TemplateOpts,\n): (arg?: unknown) => T {\n  code = formatter.code(code);\n\n  let metadata: Metadata;\n\n  return (arg?: unknown) => {\n    const replacements = normalizeReplacements(arg);\n\n    if (!metadata) metadata = parseAndBuildMetadata(formatter, code, opts);\n\n    return formatter.unwrap(populatePlaceholders(metadata, replacements));\n  };\n}\n"],"mappings":"AAGA,SAASA,qBAAqB,QAAQ,cAAW;AACjD,OAAOC,qBAAqB,MAAM,YAAS;AAC3C,OAAOC,oBAAoB,MAAM,eAAY;AAE7C,eAAe,SAASC,cAAcA,CACpCC,SAAuB,EACvBC,IAAY,EACZC,IAAkB,EACI;EACtBD,IAAI,GAAGD,SAAS,CAACC,IAAI,CAACA,IAAI,CAAC;EAE3B,IAAIE,QAAkB;EAEtB,OAAQC,GAAa,IAAK;IACxB,MAAMC,YAAY,GAAGT,qBAAqB,CAACQ,GAAG,CAAC;IAE/C,IAAI,CAACD,QAAQ,EAAEA,QAAQ,GAAGN,qBAAqB,CAACG,SAAS,EAAEC,IAAI,EAAEC,IAAI,CAAC;IAEtE,OAAOF,SAAS,CAACM,MAAM,CAACR,oBAAoB,CAACK,QAAQ,EAAEE,YAAY,CAAC,CAAC;EACvE,CAAC;AACH"}