{"version":3,"names":["ALIAS_KEYS","PLACEHOLDERS","PLACEHOLDERS_ALIAS","Declaration","Pattern","type","alias","length","PLACEHOLDERS_FLIPPED_ALIAS","Object","keys","forEach","hasOwnProperty","call","push"],"sources":["../../src/definitions/placeholders.ts"],"sourcesContent":["import { ALIAS_KEYS } from \"./utils\";\n\nexport const PLACEHOLDERS = [\n  \"Identifier\",\n  \"StringLiteral\",\n  \"Expression\",\n  \"Statement\",\n  \"Declaration\",\n  \"BlockStatement\",\n  \"ClassBody\",\n  \"Pattern\",\n] as const;\n\nexport const PLACEHOLDERS_ALIAS: Record<string, string[]> = {\n  Declaration: [\"Statement\"],\n  Pattern: [\"PatternLike\", \"LVal\"],\n};\n\nfor (const type of PLACEHOLDERS) {\n  const alias = ALIAS_KEYS[type];\n  if (alias?.length) PLACEHOLDERS_ALIAS[type] = alias;\n}\n\nexport const PLACEHOLDERS_FLIPPED_ALIAS: Record<string, string[]> = {};\n\nObject.keys(PLACEHOLDERS_ALIAS).forEach(type => {\n  PLACEHOLDERS_ALIAS[type].forEach(alias => {\n    if (!Object.hasOwnProperty.call(PLACEHOLDERS_FLIPPED_ALIAS, alias)) {\n      PLACEHOLDERS_FLIPPED_ALIAS[alias] = [];\n    }\n    PLACEHOLDERS_FLIPPED_ALIAS[alias].push(type);\n  });\n});\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,YAAS;AAEpC,OAAO,MAAMC,YAAY,GAAG,CAC1B,YAAY,EACZ,eAAe,EACf,YAAY,EACZ,WAAW,EACX,aAAa,EACb,gBAAgB,EAChB,WAAW,EACX,SAAS,CACD;AAEV,OAAO,MAAMC,kBAA4C,GAAG;EAC1DC,WAAW,EAAE,CAAC,WAAW,CAAC;EAC1BC,OAAO,EAAE,CAAC,aAAa,EAAE,MAAM;AACjC,CAAC;AAED,KAAK,MAAMC,IAAI,IAAIJ,YAAY,EAAE;EAC/B,MAAMK,KAAK,GAAGN,UAAU,CAACK,IAAI,CAAC;EAC9B,IAAIC,KAAK,YAALA,KAAK,CAAEC,MAAM,EAAEL,kBAAkB,CAACG,IAAI,CAAC,GAAGC,KAAK;AACrD;AAEA,OAAO,MAAME,0BAAoD,GAAG,CAAC,CAAC;AAEtEC,MAAM,CAACC,IAAI,CAACR,kBAAkB,CAAC,CAACS,OAAO,CAACN,IAAI,IAAI;EAC9CH,kBAAkB,CAACG,IAAI,CAAC,CAACM,OAAO,CAACL,KAAK,IAAI;IACxC,IAAI,CAACG,MAAM,CAACG,cAAc,CAACC,IAAI,CAACL,0BAA0B,EAAEF,KAAK,CAAC,EAAE;MAClEE,0BAA0B,CAACF,KAAK,CAAC,GAAG,EAAE;IACxC;IACAE,0BAA0B,CAACF,KAAK,CAAC,CAACQ,IAAI,CAACT,IAAI,CAAC;EAC9C,CAAC,CAAC;AACJ,CAAC,CAAC"}