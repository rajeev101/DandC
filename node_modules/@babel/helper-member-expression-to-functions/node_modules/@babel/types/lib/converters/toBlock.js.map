{"version":3,"names":["isBlockStatement","isFunction","isEmptyStatement","isStatement","returnStatement","expressionStatement","blockStatement","toBlock","node","parent","blockNodes"],"sources":["../../src/converters/toBlock.ts"],"sourcesContent":["import {\n  isBlockStatement,\n  isFunction,\n  isEmptyStatement,\n  isStatement,\n} from \"../validators/generated\";\nimport {\n  returnStatement,\n  expressionStatement,\n  blockStatement,\n} from \"../builders/generated\";\nimport type * as t from \"..\";\n\nexport default function toBlock(\n  node: t.Statement | t.Expression,\n  parent?: t.Node,\n): t.BlockStatement {\n  if (isBlockStatement(node)) {\n    return node;\n  }\n\n  let blockNodes: t.Statement[] = [];\n\n  if (isEmptyStatement(node)) {\n    blockNodes = [];\n  } else {\n    if (!isStatement(node)) {\n      if (isFunction(parent)) {\n        node = returnStatement(node);\n      } else {\n        node = expressionStatement(node);\n      }\n    }\n\n    blockNodes = [node];\n  }\n\n  return blockStatement(blockNodes);\n}\n"],"mappings":"AAAA,SACEA,gBAAgB,EAChBC,UAAU,EACVC,gBAAgB,EAChBC,WAAW,QACN,kCAAyB;AAChC,SACEC,eAAe,EACfC,mBAAmB,EACnBC,cAAc,QACT,gCAAuB;AAG9B,eAAe,SAASC,OAAOA,CAC7BC,IAAgC,EAChCC,MAAe,EACG;EAClB,IAAIT,gBAAgB,CAACQ,IAAI,CAAC,EAAE;IAC1B,OAAOA,IAAI;EACb;EAEA,IAAIE,UAAyB,GAAG,EAAE;EAElC,IAAIR,gBAAgB,CAACM,IAAI,CAAC,EAAE;IAC1BE,UAAU,GAAG,EAAE;EACjB,CAAC,MAAM;IACL,IAAI,CAACP,WAAW,CAACK,IAAI,CAAC,EAAE;MACtB,IAAIP,UAAU,CAACQ,MAAM,CAAC,EAAE;QACtBD,IAAI,GAAGJ,eAAe,CAACI,IAAI,CAAC;MAC9B,CAAC,MAAM;QACLA,IAAI,GAAGH,mBAAmB,CAACG,IAAI,CAAC;MAClC;IACF;IAEAE,UAAU,GAAG,CAACF,IAAI,CAAC;EACrB;EAEA,OAAOF,cAAc,CAACI,UAAU,CAAC;AACnC"}